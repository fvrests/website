---
import { CollectionEntry, getCollection } from 'astro:content';
import Subheading from '~/components/text/subheading.astro';
import Link from '~/components/link.astro';
import Layout from '~/layouts/Layout.astro';

interface Props {
	tag?: string;
}
const { tag } = Astro.props;

// get all unique tags
const allPosts = await getCollection('posts');
const allTags = new Set<string>();
allPosts.map((post) => {
	post.data.tags.map((tag) => allTags.add(tag));
});

const sortPosts = (posts: CollectionEntry<'posts'>[]) =>
	posts.sort((a, b) => b.data.publishDate - a.data.publishDate);

// get posts for current tag
const posts: CollectionEntry<'posts'>[] = tag
	? sortPosts(allPosts.filter(({ data }) => data.tags.includes(tag)))
	: sortPosts(allPosts);
---

<div>
	<ul role="list" class="mb-4">
		{
			posts.map((post) => (
				<li class="mb-1 grid max-w-fit">
					<Link href={`/notes/${post.slug}`}>
						<div class="flex items-end gap-12">
							<span class="font-mono opacity-80">
								{post.data.publishDate.toLocaleDateString(undefined, {
									timeZone: 'UTC',
									month: 'short',
									year: 'numeric',
								})}
							</span>
							<span>{post.data.title}</span>
						</div>
					</Link>
				</li>
			))
		}
	</ul>
</div>
